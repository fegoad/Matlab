1.

%This script calculates the volume of a hollow sphere.

%Input for inner radius
inrad=input('Enter the inner radius: ');
%Input for outer radius
outrad=input('Enter the outer radius: ');

hollsphvol=(4*pi/3)*(outrad^3-inrad^3);

%Print the result
fprintf('The volume of the hollow sphere is %d\n',hollsphvol)

3.

>> chemelement=input('Enter the name of a chemical element: ','s')
Enter the name of a chemical element: Krypton
chemelement =
Krypton
>> length(chemelement)
ans =
     7
     
4.

>> realnum=input('Enter a real number: ');
Enter a real number: 6
>> fprintf('The real number is %.2f\n',realnum)
The real number is 6.00

6.

-without specifying any field width:
     >> fprintf('The real number is %f\n',12345.6789)
     The real number is 12345.678900
     
-in a field width of 10 with four decimal places
     >> fprintf('The real number is %10.4f\n',12345.6789)
     The real number is 12345.6789

-in a field width of 10 with two decimal places
     >> fprintf('The real number is %10.2f\n',12345.6789)
     The real number is   12345.68

-in a field width of 6 with four decimal places
     >> fprintf('The real number is %6.4f\n',12345.6789)
     The real number is 12345.6789

-in a field width of 2 with four decimal places
     >> fprintf('The real number is %2.4f\n',12345.6789)
     The real number is 12345.6789     
     
     
9.

%This script calculates the area of a rectangle

%Asks the user to prompt the length and width of the rectangle
reclength=input('Enter the length of the rectangle: ');
recwidth=input('Enter the width of the rectangle: ');

%Calculate the area of the rectangle
recarea=reclength*recwidth;

%Print the area of the rectangle with two decimal places only
fprintf('The area of the rectangle is %.2f\n',recarea)



>> script2
Enter the length of the rectangle: 2
Enter the width of the rectangle: 4
The area of the rectangle is 8.00




Global 2.

%Sum of a vector of random variables with mean "v"

%Prompt the user to enter the size of a vector
vecsize=input('Please, enter the vector size:');
%Mean value used to calculate a normal distribution of random numbers
meanval=input('Type a value "v" for the mean:');
%Ask the user name
username=input('Enter your name, please:','s');

%Creates a vector of normally distributed random numbers with mean equal to
%"meanval" and size equal to "vecsize" and sum its components
randvector=meanval*randn(1,vecsize)*sqrt(1); 
thesum=sum(randvector);

%Display the result
fprintf('%s, the sum is %f, trust me\n',username,thesum)
%Plots a histogram with the data inside the vector
hist(randvector,5)
xlabel('Values')
ylabel('Frequency')
title('My Histogram')


Global 3.

function [spreturn] = requestsandp
    spreturn=input('Enter a percent return value for S&P500:');
    spreturn=spreturn/100;
end


%This script calculates the expected value of IBEX35 given a return
%in S&P500 based on an linear regression estimate.

%Import the request onf S&P500 return made by the user
[spreturn]=requestsandp();
%Import data from the spreadsheet
data=xlsread('ibexandsp.xls');
%Compute index returns for ibex35 and s&p500
retibex=((data(1:end-1,1)-data(2:end,1))./(data(2:end,1)));
retsandp=(data(1:end-1,2)-data(2:end,2))./(data(2:end,2));
%plot time series
plot(retibex,'r')
hold on
plot(retsandp,'b')
hold off
title('Returns ibex35 / s&p500')
legend('Ibex35','s&p500')
%coefficient calculations
y=retibex;
x=retsandp;
X2=[ones(size(x,1),1) x];
coef=inv(X2'*X2)*X2'*y;
%expected value calculation for the IBEX35
predibex=coef(1)+coef(2)*spreturn;
%Transform the expected return of the ibex as a precentage
predibexprec=predibex*100;
%Display the expected return for the IBEX35
fprintf('The expecter return of the IBEX35 for the next trading day is: %.2f%%\n',predibexprec)

